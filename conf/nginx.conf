worker_processes  2;
user  nginx;

pid /var/log/fadeploy/nginx.pid;

# run in the foreground so supervisord can look after it
daemon off;

events {
  worker_connections  4096;
  use epoll;
}


http {
  server_tokens off;
  include       mime.types;
  default_type  application/octet-stream;

  access_log off;
# error_log     /var/log/jupo/nginx.debug.log  debug;

  sendfile      off;
  tcp_nopush    on;
  tcp_nodelay   on;

  client_body_buffer_size     1K;
  client_max_body_size        1k;
  client_header_buffer_size 1M;
  large_client_header_buffers 16 16k;

  client_body_timeout   10;
  client_header_timeout 10;
  keepalive_timeout     5 5;
  send_timeout          10;

#  more_clear_headers ETag;
  more_set_headers "Server: filestring-ws";
  more_set_headers "X-Hacker: If you're reading this, you should visit filestring.com and apply to join the fun.";


  upstream app_servers {
    server 127.0.0.1:5000;
    server 127.0.0.1:5001;
    server 127.0.0.1:5002;
    server 127.0.0.1:5003;
  }

  upstream stream_servers {
    server 127.0.0.1:6000;
    server 127.0.0.1:6001;
    server 127.0.0.1:6002;
  }



  server {
    listen       80 default;
    server_name  deploy.fslog.cloudapp.net;

    keepalive_timeout    70;


    # output compression saves bandwidth
    gzip  on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 1;
    gzip_proxied any;
    gzip_types text/plain
               text/css
               application/json
               application/x-javascript
               text/xml
               application/xml
               application/xml+rss
               text/javascript
               application/javascript;

    # make sure gzip does not lose large gzipped js or css files
    # see http://blog.leetsoft.com/2007/7/25/nginx-gzip-ssl
    gzip_buffers 16 8k;

    # Disable gzip for certain browsers.
    gzip_disable msie6;

    client_max_body_size 100M;


    location ~* ^/proxy/(.*?)/(.*) {
      resolver 8.8.8.8;

      # Extract info from the request
      set $_host  $1;
      set $_uri   $2;

      # Set download request headers
      proxy_set_header Host $_host;
      proxy_set_header Authorization '';

      # Do not touch local disks when proxying content to clients
      proxy_max_temp_file_size 0;

      # Download the file and send it to client
      proxy_pass http://$_host/$_uri?$args;
    }

    location ~* ^/attachment/(.*?)\.(jpg|png) {

#      proxy_ignore_headers Set-Cookie Cache-Control Expires X-Accel-Expires;

      proxy_set_header Host $http_host;
      proxy_set_header X-Scheme $scheme;

      expires max;

      proxy_pass http://app_servers;
    }

    location = /stream {
      # disable proxy cache
      proxy_cache off;

      proxy_redirect off;
      proxy_buffering off;
      proxy_pass_header Set-Cookie;
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_set_header Proxy-Connection "";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://stream_servers;
    }

    location / {

      proxy_buffer_size   128k;
      proxy_buffers   4 256k;
      proxy_busy_buffers_size   256k;

      # disable proxy cache
      proxy_cache off;

      # Add expires header
      if ($request_uri ~* "\.(ico|otf|css|js|gif|jpe?g|png)(\?v?[0-9\.]+)?$") {
        expires 1y;
        add_header Cache-Control public;
        break;
      }

      proxy_redirect off;
      proxy_buffering off;
      proxy_pass_header Set-Cookie;
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_set_header Proxy-Connection "";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://app_servers;

    }


  }


}